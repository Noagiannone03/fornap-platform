/**
 * FORNAP - Paiement √âv√©nement
 * Page de r√©servation et paiement fictif
 */

console.log('üí≥ FORNAP - Paiement √âv√©nement');

// Variables globales
let currentUser = null;
let currentEvent = null;
let eventId = null;
let ticketQuantity = 1;
let totalAmount = 0;

// M√™me donn√©es fictives que les autres pages
const mockEventsData = [
    {
        id: 1,
        title: "Soir√©e Jazz & Co-cr√©ation",
        description: "Une soir√©e unique m√™lant jazz live et sessions de co-cr√©ation pour les entrepreneurs. Venez networker dans une ambiance musicale exceptionnelle.",
        fullDescription: "Plongez dans une atmosph√®re feutr√©e o√π la musique jazz se m√™le aux discussions entrepreneuriales. Cette soir√©e unique propose un format in√©dit : des sessions de co-cr√©ation guid√©es par des coachs business, ponctu√©es par des performances live de musiciens locaux. Un moment privil√©gi√© pour d√©velopper votre r√©seau professionnel dans un cadre d√©tendu et inspirant.",
        category: "musique",
        date: "2024-08-15",
        time: "19:00",
        endTime: "23:00",
        location: "Salon Principal FORNAP",
        price: 25.00,
        maxAttendees: 80,
        currentAttendees: 42,
        featured: true,
        image: "https://images.unsplash.com/photo-1493225457124-a3eb161ffa5f?w=800&h=600&fit=crop",
        artists: ["Trio Jazz Urbain", "Marie Laurent (saxo)"],
        tags: ["jazz", "networking", "musique live"],
        organizer: "FORNAP Events",
        status: "open"
    },
    {
        id: 2,
        title: "Workshop UX/UI Design",
        description: "Atelier pratique de design UX/UI anim√© par des experts du secteur. Apprenez les derni√®res tendances et m√©thodes.",
        fullDescription: "Cet atelier intensif de 4 heures vous plongera dans l'univers du design UX/UI moderne. Anim√© par des designers seniors ayant travaill√© pour des startups et grandes entreprises, vous d√©couvrirez les outils, m√©thodes et tendances actuelles. Au programme : recherche utilisateur, wireframing, prototypage, et tests d'utilisabilit√©. Mat√©riel fourni, ordinateur portable requis.",
        category: "atelier",
        date: "2024-08-12",
        time: "14:00",
        endTime: "18:00",
        location: "Salle de Formation",
        price: 75.00,
        maxAttendees: 25,
        currentAttendees: 18,
        featured: true,
        image: "https://images.unsplash.com/photo-1581291518857-4e27b48ff24e?w=800&h=600&fit=crop",
        artists: ["Sarah Chen", "Maxime Dubois"],
        tags: ["design", "formation", "ux", "ui"],
        organizer: "Design Academy",
        status: "open"
    },
    {
        id: 3,
        title: "Pitch Night Startups",
        description: "Soir√©e de pitch pour startups et entrepreneurs. Pr√©sentez votre projet devant un jury d'investisseurs.",
        fullDescription: "La grande soir√©e mensuelle des entrepreneurs ! Venez pr√©senter votre startup en 3 minutes chrono devant un jury compos√© d'investisseurs, de business angels et d'entrepreneurs exp√©riment√©s. Prix du meilleur pitch : accompagnement gratuit de 6 mois par notre incubateur partenaire. Ouvert aux spectateurs, networking et cocktail inclus.",
        category: "conference",
        date: "2024-08-20",
        time: "18:30",
        endTime: "22:00",
        location: "Auditorium FORNAP",
        price: 15.00,
        maxAttendees: 150,
        currentAttendees: 67,
        featured: true,
        image: "https://images.unsplash.com/photo-1559223607-a43c990c692c?w=800&h=600&fit=crop",
        artists: ["Panel d'investisseurs", "Business Angels Lyon"],
        tags: ["startup", "pitch", "investissement", "networking"],
        organizer: "FORNAP Incubator",
        status: "open"
    },
    {
        id: 4,
        title: "Afterwork Networking",
        description: "Rencontrez d'autres professionnels dans une ambiance d√©contract√©e. Cocktails et canap√©s offerts.",
        fullDescription: "L'afterwork incontournable de la communaut√© FORNAP ! Chaque jeudi, retrouvez entrepreneurs, freelances, et professionnels de tous secteurs pour un moment de d√©tente et de networking authentique. Cocktails signature et canap√©s pr√©par√©s par notre chef partenaire. Animation avec jeux de networking pour faciliter les rencontres.",
        category: "networking",
        date: "2024-08-08",
        time: "18:00",
        endTime: "21:00",
        location: "Terrasse & Lounge",
        price: 0.00,
        maxAttendees: 60,
        currentAttendees: 34,
        featured: false,
        image: "https://images.unsplash.com/photo-1511795409834-ef04bbd61622?w=800&h=600&fit=crop",
        artists: ["DJ Ambient"],
        tags: ["networking", "afterwork", "gratuit"],
        organizer: "FORNAP Community",
        status: "open"
    },
    {
        id: 5,
        title: "Formation Marketing Digital",
        description: "Masterclass sur les strat√©gies marketing digital actuelles. De la th√©orie √† la pratique en une journ√©e.",
        fullDescription: "Une journ√©e compl√®te d√©di√©e au marketing digital moderne. Cette formation intensive couvre tous les aspects essentiels : SEO, SEA, r√©seaux sociaux, email marketing, automation et analytics. Alternance entre th√©orie et ateliers pratiques sur vos propres projets. Certificat de formation d√©livr√©. Petit-d√©jeuner et d√©jeuner inclus.",
        category: "atelier",
        date: "2024-08-25",
        time: "09:00",
        endTime: "17:30",
        location: "Grande Salle de Conf√©rence",
        price: 120.00,
        maxAttendees: 30,
        currentAttendees: 22,
        featured: false,
        image: "https://images.unsplash.com/photo-1432888622747-4eb9a8efeb07?w=800&h=600&fit=crop",
        artists: ["Julie Martin", "Expert Marketing"],
        tags: ["marketing", "digital", "formation", "certifiante"],
        organizer: "Marketing Pro Academy",
        status: "open"
    },
    {
        id: 6,
        title: "Concert √âlectro Lounge",
        description: "Soir√©e √©lectro avec des artistes locaux. Ambiance lounge et cocktails cr√©atifs au programme.",
        fullDescription: "Transformez votre soir√©e en exp√©rience sensorielle unique ! Nos DJs r√©sidents et artistes √©lectro locaux vous feront voyager dans un univers sonore √©clectique m√™lant deep house, ambient et √©lectro organique. Bar √† cocktails cr√©atifs, √©clairage d'ambiance et espace chill-out. Dress code : d√©contract√© chic.",
        category: "musique",
        date: "2024-08-30",
        time: "20:00",
        endTime: "01:00",
        location: "Espace Principal + Terrasse",
        price: 20.00,
        maxAttendees: 100,
        currentAttendees: 45,
        featured: false,
        image: "https://images.unsplash.com/photo-1470225620780-dba8ba36b745?w=800&h=600&fit=crop",
        artists: ["DJ Pulse", "Collective Neon", "Lisa Voltage"],
        tags: ["√©lectro", "concert", "cocktails", "lounge"],
        organizer: "FORNAP Nights",
        status: "open"
    },
    {
        id: 7,
        title: "Conf√©rence Intelligence Artificielle",
        description: "Les enjeux de l'IA dans le business moderne. Conf√©rence suivie d'un d√©bat avec des experts du secteur.",
        fullDescription: "Plongez au c≈ìur des transformations num√©riques actuelles avec cette conf√©rence d√©di√©e √† l'intelligence artificielle et ses applications business. Des experts acad√©miques et industriels partageront leurs insights sur l'IA g√©n√©rative, l'automatisation des processus, et l'√©thique technologique. Table ronde interactive et session Q&A. Support de pr√©sentation fourni.",
        category: "conference",
        date: "2024-09-05",
        time: "14:00",
        endTime: "17:00",
        location: "Amphith√©√¢tre",
        price: 45.00,
        maxAttendees: 120,
        currentAttendees: 89,
        featured: false,
        image: "https://images.unsplash.com/photo-1485827404703-89b55fcc595e?w=800&h=600&fit=crop",
        artists: ["Dr. Antoine Rousseau", "Maria Santos", "Tech Panel"],
        tags: ["ia", "technologie", "conf√©rence", "innovation"],
        organizer: "Tech Innovation Hub",
        status: "open"
    },
    {
        id: 8,
        title: "Brunch Entrepreneurial",
        description: "Brunch dominical pour entrepreneurs et freelances. √âchanges informels et petit-d√©jeuner gourmand.",
        fullDescription: "Commencez votre dimanche par un moment convivial avec la communaut√© entrepreneuriale ! Notre brunch mensuel r√©unit entrepreneurs, freelances et cr√©ateurs d'entreprise autour d'un buffet gourmand pr√©par√© avec des produits locaux. Discussions libres, √©changes d'exp√©riences et d√©couverte de nouveaux partenaires potentiels dans une atmosph√®re d√©tendue.",
        category: "networking",
        date: "2024-08-11",
        time: "10:30",
        endTime: "14:00",
        location: "Restaurant & Terrasse",
        price: 35.00,
        maxAttendees: 50,
        currentAttendees: 28,
        featured: false,
        image: "https://images.unsplash.com/photo-1551218808-94e220e084d2?w=800&h=600&fit=crop",
        artists: ["Chef Local Partner"],
        tags: ["brunch", "entrepreneuriat", "networking", "dimanche"],
        organizer: "FORNAP Community",
        status: "open"
    }
];

// Fonctions utilitaires
function formatDate(dateString) {
    const options = { 
        weekday: 'long', 
        year: 'numeric', 
        month: 'long', 
        day: 'numeric' 
    };
    return new Date(dateString).toLocaleDateString('fr-FR', options);
}

function formatPrice(price) {
    return price === 0 ? 'Gratuit' : `${price.toFixed(2)} ‚Ç¨`;
}

function getEventIdFromURL() {
    const urlParams = new URLSearchParams(window.location.search);
    return parseInt(urlParams.get('id'));
}

function generateBookingReference() {
    const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const numbers = '0123456789';
    let reference = 'EVT-';
    
    // 3 lettres
    for (let i = 0; i < 3; i++) {
        reference += letters.charAt(Math.floor(Math.random() * letters.length));
    }
    
    reference += '-';
    
    // 6 chiffres
    for (let i = 0; i < 6; i++) {
        reference += numbers.charAt(Math.floor(Math.random() * numbers.length));
    }
    
    return reference;
}

// Rendu du r√©capitulatif de l'√©v√©nement
function renderEventSummary() {
    const eventSummary = document.getElementById('eventSummary');
    if (!eventSummary || !currentEvent) return;
    
    eventSummary.innerHTML = `
        <img src="${currentEvent.image}" alt="${currentEvent.title}" class="summary-event-image"
             onerror="this.src='https://via.placeholder.com/300x120?text=√âv√©nement'">
        <h4 class="summary-event-title">${currentEvent.title}</h4>
        <div class="summary-event-details">
            <div class="summary-detail-item">
                <span>üìÖ</span>
                <span>${formatDate(currentEvent.date)}</span>
            </div>
            <div class="summary-detail-item">
                <span>üïí</span>
                <span>${currentEvent.time} - ${currentEvent.endTime}</span>
            </div>
            <div class="summary-detail-item">
                <span>üìç</span>
                <span>${currentEvent.location}</span>
            </div>
        </div>
    `;
}

// Rendu du d√©tail des prix
function renderPriceBreakdown() {
    const priceBreakdown = document.getElementById('priceBreakdown');
    const totalAmountElement = document.getElementById('totalAmount');
    
    if (!priceBreakdown || !totalAmountElement || !currentEvent) return;
    
    const unitPrice = currentEvent.price;
    const subtotal = unitPrice * ticketQuantity;
    const serviceFee = currentEvent.price > 0 ? 2.50 : 0; // Frais de service uniquement si payant
    totalAmount = subtotal + serviceFee;
    
    priceBreakdown.innerHTML = `
        <div class="price-line">
            <span>Billet (${formatPrice(unitPrice)} x ${ticketQuantity})</span>
            <span>${formatPrice(subtotal)}</span>
        </div>
        ${serviceFee > 0 ? `
            <div class="price-line">
                <span>Frais de service</span>
                <span>${formatPrice(serviceFee)}</span>
            </div>
        ` : ''}
    `;
    
    totalAmountElement.textContent = formatPrice(totalAmount);
}

// Gestion de la quantit√©
function updateQuantity(newQuantity) {
    const maxAvailable = currentEvent.maxAttendees - currentEvent.currentAttendees;
    
    if (newQuantity < 1) newQuantity = 1;
    if (newQuantity > 10) newQuantity = 10;
    if (newQuantity > maxAvailable) newQuantity = maxAvailable;
    
    ticketQuantity = newQuantity;
    
    const quantityInput = document.getElementById('ticketQuantity');
    if (quantityInput) {
        quantityInput.value = ticketQuantity;
    }
    
    renderPriceBreakdown();
}

function handleQuantityChange() {
    const quantityInput = document.getElementById('ticketQuantity');
    if (quantityInput) {
        updateQuantity(parseInt(quantityInput.value) || 1);
    }
}

function increaseQuantity() {
    updateQuantity(ticketQuantity + 1);
}

function decreaseQuantity() {
    updateQuantity(ticketQuantity - 1);
}

// Pr√©-remplissage du formulaire
function prefillForm() {
    if (!currentUser) return;
    
    const attendeeEmail = document.getElementById('attendeeEmail');
    if (attendeeEmail && currentUser.email) {
        attendeeEmail.value = currentUser.email;
    }
    
    // TODO: R√©cup√©rer plus d'infos depuis le profil utilisateur
    // const attendeeName = document.getElementById('attendeeName');
    // const attendeePhone = document.getElementById('attendeePhone');
}

// Validation du formulaire
function validateForm() {
    const attendeeName = document.getElementById('attendeeName');
    const attendeeEmail = document.getElementById('attendeeEmail');
    const attendeePhone = document.getElementById('attendeePhone');
    
    if (!attendeeName.value.trim()) {
        FornapUtils.showMessage('error', 'Veuillez saisir le nom du participant');
        attendeeName.focus();
        return false;
    }
    
    if (!attendeeEmail.value.trim() || !FornapUtils.validateEmail(attendeeEmail.value)) {
        FornapUtils.showMessage('error', 'Veuillez saisir un email valide');
        attendeeEmail.focus();
        return false;
    }
    
    if (attendeePhone.value.trim() && !FornapUtils.validatePhone(attendeePhone.value)) {
        FornapUtils.showMessage('error', 'Veuillez saisir un num√©ro de t√©l√©phone valide');
        attendeePhone.focus();
        return false;
    }
    
    return true;
}

// Traitement du paiement fictif
async function processPayment() {
    if (!validateForm()) return;
    
    const confirmButton = document.getElementById('confirmPaymentBtn');
    if (confirmButton) {
        confirmButton.disabled = true;
        confirmButton.textContent = 'Traitement en cours...';
    }
    
    try {
        // Simulation d'un appel API de paiement
        await new Promise(resolve => setTimeout(resolve, 2000));
        
        // Simuler la sauvegarde en base de donn√©es
        const bookingData = {
            eventId: currentEvent.id,
            eventTitle: currentEvent.title,
            userId: currentUser.uid,
            userEmail: currentUser.email,
            attendeeName: document.getElementById('attendeeName').value,
            attendeeEmail: document.getElementById('attendeeEmail').value,
            attendeePhone: document.getElementById('attendeePhone').value,
            quantity: ticketQuantity,
            totalAmount: totalAmount,
            paymentMethod: document.querySelector('input[name="paymentMethod"]:checked').value,
            bookingReference: generateBookingReference(),
            bookingDate: new Date().toISOString(),
            status: 'confirmed'
        };
        
        // Sauvegarder dans localStorage pour simuler la persistance
        const userBookings = JSON.parse(localStorage.getItem(`bookings_${currentUser.uid}`) || '[]');
        userBookings.push(bookingData);
        localStorage.setItem(`bookings_${currentUser.uid}`, JSON.stringify(userBookings));
        
        // TODO: Sauvegarder en Firestore
        // await saveBookingToFirestore(bookingData);
        
        // Afficher la confirmation
        showConfirmationModal(bookingData.bookingReference);
        
        console.log('‚úÖ R√©servation confirm√©e:', bookingData);
        
    } catch (error) {
        console.error('‚ùå Erreur lors du paiement:', error);
        FornapUtils.showMessage('error', 'Erreur lors du traitement du paiement. Veuillez r√©essayer.');
        
        if (confirmButton) {
            confirmButton.disabled = false;
            confirmButton.textContent = 'Confirmer la r√©servation';
        }
    }
}

// Modal de confirmation
function showConfirmationModal(bookingReference) {
    const modal = document.getElementById('confirmationModal');
    const bookingReferenceElement = document.getElementById('bookingReference');
    
    if (modal && bookingReferenceElement) {
        bookingReferenceElement.textContent = bookingReference;
        modal.classList.add('show');
    }
}

// Initialisation des event listeners
function initEventListeners() {
    // Gestion de la quantit√©
    const decreaseBtn = document.getElementById('decreaseBtn');
    const increaseBtn = document.getElementById('increaseBtn');
    const quantityInput = document.getElementById('ticketQuantity');
    
    if (decreaseBtn) decreaseBtn.addEventListener('click', decreaseQuantity);
    if (increaseBtn) increaseBtn.addEventListener('click', increaseQuantity);
    if (quantityInput) quantityInput.addEventListener('change', handleQuantityChange);
    
    // Bouton de confirmation
    const confirmPaymentBtn = document.getElementById('confirmPaymentBtn');
    if (confirmPaymentBtn) {
        confirmPaymentBtn.addEventListener('click', processPayment);
    }
    
    // Boutons de la modal de confirmation
    const backToEventsBtn = document.getElementById('backToEventsBtn');
    const viewDashboardBtn = document.getElementById('viewDashboardBtn');
    
    if (backToEventsBtn) {
        backToEventsBtn.addEventListener('click', () => {
            window.location.href = 'evenements.html';
        });
    }
    
    if (viewDashboardBtn) {
        viewDashboardBtn.addEventListener('click', () => {
            window.location.href = '../dashboard.html';
        });
    }
}

// V√©rification de l'authentification
function checkAuthentication() {
    if (!currentUser) {
        FornapUtils.showMessage('error', 'Vous devez √™tre connect√© pour acc√©der √† cette page');
        setTimeout(() => {
            window.location.href = '../../pages/login.html';
        }, 2000);
        return false;
    }
    return true;
}

// Chargement de l'√©v√©nement
function loadEvent() {
    eventId = getEventIdFromURL();
    
    if (!eventId) {
        FornapUtils.showMessage('error', 'ID d\'√©v√©nement manquant');
        setTimeout(() => {
            window.location.href = 'evenements.html';
        }, 2000);
        return false;
    }
    
    currentEvent = mockEventsData.find(event => event.id === eventId);
    
    if (!currentEvent) {
        FornapUtils.showMessage('error', '√âv√©nement non trouv√©');
        setTimeout(() => {
            window.location.href = 'evenements.html';
        }, 2000);
        return false;
    }
    
    // V√©rifier la disponibilit√©
    const availableSpots = currentEvent.maxAttendees - currentEvent.currentAttendees;
    if (availableSpots <= 0) {
        FornapUtils.showMessage('error', 'Cet √©v√©nement est complet');
        setTimeout(() => {
            window.location.href = `event-detail.html?id=${eventId}`;
        }, 2000);
        return false;
    }
    
    // Mettre √† jour le titre de la page
    document.title = `R√©servation ${currentEvent.title} - FORNAP`;
    
    return true;
}

// Gestion de l'authentification
function handleAuthStateChange(user) {
    console.log('üìù √âtat auth chang√©:', user ? 'connect√©' : 'd√©connect√©');
    
    if (user) {
        currentUser = user;
        console.log('üë§ Utilisateur connect√©:', user.email);
        
        if (checkAuthentication() && loadEvent()) {
            renderEventSummary();
            renderPriceBreakdown();
            prefillForm();
        }
    } else {
        currentUser = null;
        console.log('üë§ Utilisateur d√©connect√©');
        checkAuthentication();
    }
}

// Initialisation de la page
async function initPage() {
    console.log('‚úÖ Initialisation page paiement √©v√©nement');
    
    try {
        initEventListeners();
        console.log('üéØ Page paiement √©v√©nement pr√™te !');
        
    } catch (error) {
        console.error('‚ùå Erreur initialisation page paiement:', error);
        FornapUtils.showMessage('error', 'Erreur lors du chargement de la page');
    }
}

// Initialisation g√©n√©rale
document.addEventListener('DOMContentLoaded', async function() {
    console.log('‚úÖ DOM charg√© - Paiement √âv√©nement');

    try {
        // Initialiser les services
        await FornapAuth.init();
        
        // Injecter navbar et footer
        const navbarPlaceholder = document.getElementById('navbar-placeholder');
        if (navbarPlaceholder) {
            navbarPlaceholder.outerHTML = FornapComponents.generateNavbar('events', '../../');
        }

        const footerPlaceholder = document.getElementById('footer-placeholder');
        if (footerPlaceholder) {
            footerPlaceholder.outerHTML = FornapComponents.generateFooter('../../');
        }

        // Initialiser les √©v√©nements navbar apr√®s injection
        setTimeout(() => {
            FornapComponents.initNavbarEvents('../../', {
                onLogin: () => window.location.href = '../../pages/login.html',
                onLogout: async () => {
                    try {
                        await FornapAuth.signOut();
                        FornapUtils.showMessage('success', 'D√©connexion r√©ussie');
                        setTimeout(() => window.location.href = '../../index.html', 1000);
                    } catch (error) {
                        console.error('‚ùå Erreur d√©connexion:', error);
                        FornapUtils.showMessage('error', 'Erreur lors de la d√©connexion');
                    }
                }
            });
        }, 100);

        // √âcouter les changements d'authentification
        FornapAuth.onAuthStateChanged((user) => {
            handleAuthStateChange(user);
        });

        // Initialiser la page
        await initPage();

    } catch (error) {
        console.error('‚ùå Erreur initialisation:', error);
        FornapUtils.showMessage('error', 'Erreur lors du chargement. Veuillez recharger la page.');
    }
});